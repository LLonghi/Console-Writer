using System;

namespace RichConsoleWriter
{
    public static class ConsoleWriter
    {
        public static readonly object ConsoleWriterLock = new object();
        public static RichConsoleWriter Write(string text, ConsoleColor color = ConsoleColor.White, bool skipTimeSpace = false)
        {
            if (skipTimeSpace)
                Console.Write("                     ");
            Console.ForegroundColor = color;
            Console.Write(text);
            BackToWhite();

            return null;
        }

        public static RichConsoleWriter WriteLine(string text, ConsoleColor color = ConsoleColor.White, bool printTimeLog = true)
        {
            if (printTimeLog)
                TimeLog();
            Console.ForegroundColor = color;
            Console.WriteLine(text);
            BackToWhite();

            return null;
        }

        public static RichConsoleWriter WLine(this RichConsoleWriter ext, string text, ConsoleColor color = ConsoleColor.White, bool printTimeLog = true)
        {
            WriteLine(text, color, printTimeLog);
            return null;
        }

        public static RichConsoleWriter Write(this RichConsoleWriter ext, string text, ConsoleColor color = ConsoleColor.White, bool skipTimeSpace = false)
        {
            Write(text, color, skipTimeSpace);
            return null;
        }

        public static void NewLine()
        {
            Console.WriteLine("");
        }

        private static void TimeLog()
        {
            Console.ForegroundColor = ConsoleColor.DarkGray;
            Console.Write($"[{DateTime.Now}]");
            BackToWhite();
        }

        private static void BackToWhite()
        {
            Console.ForegroundColor = ConsoleColor.White;
        }

        public class RichConsoleWriter
        {
        }
    }
}
